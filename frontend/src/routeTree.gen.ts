/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as RecipesImport } from './routes/recipes'
import { Route as AddRecipeImport } from './routes/addRecipe'
import { Route as IdImport } from './routes/$id'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const RecipesRoute = RecipesImport.update({
  id: '/recipes',
  path: '/recipes',
  getParentRoute: () => rootRoute,
} as any)

const AddRecipeRoute = AddRecipeImport.update({
  id: '/addRecipe',
  path: '/addRecipe',
  getParentRoute: () => rootRoute,
} as any)

const IdRoute = IdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$id': {
      id: '/$id'
      path: '/$id'
      fullPath: '/$id'
      preLoaderRoute: typeof IdImport
      parentRoute: typeof rootRoute
    }
    '/addRecipe': {
      id: '/addRecipe'
      path: '/addRecipe'
      fullPath: '/addRecipe'
      preLoaderRoute: typeof AddRecipeImport
      parentRoute: typeof rootRoute
    }
    '/recipes': {
      id: '/recipes'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof RecipesImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$id': typeof IdRoute
  '/addRecipe': typeof AddRecipeRoute
  '/recipes': typeof RecipesRoute
  '/search': typeof SearchRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$id': typeof IdRoute
  '/addRecipe': typeof AddRecipeRoute
  '/recipes': typeof RecipesRoute
  '/search': typeof SearchRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$id': typeof IdRoute
  '/addRecipe': typeof AddRecipeRoute
  '/recipes': typeof RecipesRoute
  '/search': typeof SearchRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$id' | '/addRecipe' | '/recipes' | '/search'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$id' | '/addRecipe' | '/recipes' | '/search'
  id: '__root__' | '/' | '/$id' | '/addRecipe' | '/recipes' | '/search'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  IdRoute: typeof IdRoute
  AddRecipeRoute: typeof AddRecipeRoute
  RecipesRoute: typeof RecipesRoute
  SearchRoute: typeof SearchRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  IdRoute: IdRoute,
  AddRecipeRoute: AddRecipeRoute,
  RecipesRoute: RecipesRoute,
  SearchRoute: SearchRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$id",
        "/addRecipe",
        "/recipes",
        "/search"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$id": {
      "filePath": "$id.tsx"
    },
    "/addRecipe": {
      "filePath": "addRecipe.tsx"
    },
    "/recipes": {
      "filePath": "recipes.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
